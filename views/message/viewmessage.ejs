<% include ../partials/header %>

	<div class="container">
	    <div class="row">
			<div class="col-1 col-md-3">

			</div>
	        <div class="col-10 col-md-6">
				<div class="panel panel-primary">
                <div class="panel-heading" id="accordion">
                    <span class="glyphicon glyphicon-comment"></span> Chat
                    <div class="btn-group pull-right">
                        <a type="button" class="btn btn-default btn-xs" data-toggle="collapse" data-parent="#accordion" href="#collapseOne">
                            <span class="glyphicon glyphicon-chevron-down"></span>
                        </a>
                    </div>
                </div>
				<div class="panel-collapse collapse" id="collapseOne">
				<div class="panel-body">
                    <ul id="chatroom" class="chat">

                    </ul>
					<section id="feedback"></section>
				</div>
                <div class="panel-footer">
                    <div class="input-group">
						<input id="message" class="vertical-align" type="text" placeholder="Type your message here..."  />
						<button action="/message" id="send_message" class="vertical-align btn btn-primary" type="button">Send</button>
                    </div>
                </div>
			</div>
		        </div>
				<div class="col-1 col-md-3">

				</div>
	    	</div>
		</div>
	</div>

	<script>
		//make connection
		var socket = io.connect();
		//buttons and inputs
		var message = $("#message");
		var send_message = $("#send_message");
		var chatroom = $("#chatroom");
		var feedback = $("#feedback");
		var debug = true;
		//populate the message history
		getMessages();
		//Emit message
		send_message.click(function(){
			socket.emit('new_message', {sendmessage : message.val(),sendTo:"<%=talkingto%>",sender:"<%=currentUser.username%>"});
			sendMessage({sendmessage: message.val(),sendTo:"<%=talkingto%>"});
		})

		//Listen on new_message
		socket.on("new_message", (data) => {
			feedback.html('');
			message.val('');
			console.log("Peep Data: ",data);
			addMessages(data);
		})

		//Emit typing
		message.bind("keypress", () => {
			socket.emit('typing')
		})

		//Listen on typing
		socket.on('typing', (data) => {
			console.log("ID:!!! ", data.id);
			feedback.html("<p><i> typing a message..." + "</i></p>");
		})

		function sendMessage(message){
			if(debug){
				$.post('http://localhost:3000/message', message);
			}
			else{
				$.post('https://fierce-harbor-94742.herokuapp.com/message', message);
			}
		}
		function addMessages(message){
			console.log("Sendto: ",message.sendTo);
			console.log("Talkingto: ","<%=talkingto%>");
			console.log("Current User: ","<%=currentUser.username%>");
			//Ensure user only sees who they are talking to
			if(message.sendTo=="<%=talkingto%>" && message.sender=="<%=currentUser.username%>"){
				chatroom.append(`<li class="right clearfix">
					<div class="chat-body clearfix">
						<div class="header">
							<small class=" text-muted"><span class="glyphicon glyphicon-time"></span></small>
							<strong class="pull-right primary-font">`+ message.sender +`</strong>
						</div>
						<p>
							`+message.message+`
						</p>
					</div>
				</li>`);
			}
			if(message.sender=="<%=talkingto%>"){
				chatroom.append(`<li class="right clearfix">
					<div class="chat-body clearfix">
						<div class="header">
							<small class=" text-muted"><span class="glyphicon glyphicon-time"></span></small>
							<strong class="pull-right primary-font">`+ message.sender +`</strong>
						</div>
						<p>
							`+message.message+`
						</p>
					</div>
				</li>`);
			}
		}
		function getMessages(){
			if(debug){
				$.get('http://localhost:3000/message', (data) => {
					console.log("here is data:",data);
					data.forEach(addMessages);
				})
			}
			else{
				$.get('https://fierce-harbor-94742.herokuapp.com/message', (data) => {
					console.log("here is data:",data);
					data.forEach(addMessages);
				})
			}
		}
	</script>

<% include ../partials/footer %>
